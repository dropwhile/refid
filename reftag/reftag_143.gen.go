// Code generated by refidgen. DO NOT EDIT.
// generated from: reftag.go

package reftag

import (
	"fmt"

	"github.com/dropwhile/refid"
)

const tagIDt143 = 143

type IDt143 struct {
	refid.ID
}

func (r *IDt143) Validate(err error) error {
	if err != nil {
		return err
	}
	if !r.ID.HasTag(tagIDt143) {
		return fmt.Errorf("wrong refid type")
	}
	return nil
}

func (r *IDt143) Scan(src interface{}) error {
	err := r.ID.Scan(src)
	return r.Validate(err)
}

func (r *IDt143) UnmarshalJSON(b []byte) error {
	err := r.ID.UnmarshalJSON(b)
	return r.Validate(err)
}

func (r *IDt143) UnmarshalBinary(b []byte) error {
	err := r.ID.UnmarshalBinary(b)
	return r.Validate(err)
}

func (r *IDt143) UnmarshalText(b []byte) error {
	err := r.ID.UnmarshalText(b)
	return r.Validate(err)
}

func (r IDt143) toID() refid.ID {
	return r.ID
}

func (r IDt143) tagVal() byte {
	return tagIDt143
}

type NullIDt143 struct {
	refid.NullID
}

func (u *NullIDt143) Validate(err error) error {
	if err != nil {
		return err
	}
	n := u.NullID
	if n.Valid && !n.ID.HasTag(tagIDt143) {
		return fmt.Errorf("wrong refid type")
	}
	return nil
}

func (u *NullIDt143) Scan(src interface{}) error {
	err := u.NullID.Scan(src)
	return u.Validate(err)
}

func (u *NullIDt143) UnmarshalJSON(b []byte) error {
	err := u.NullID.UnmarshalJSON(b)
	return u.Validate(err)
}
